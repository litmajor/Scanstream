generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MarketFrame {
  id                   String   @id @default(uuid())
  timestamp            DateTime @default(now())
  symbol               String
  price                Json
  volume               Float
  indicators           Json
  orderFlow            Json
  marketMicrostructure Json
}

model Signal {
  id                  String   @id @default(uuid())
  timestamp           DateTime @default(now())
  symbol              String
  type                String
  strength            Float
  confidence          Float
  price               Float
  reasoning           Json
  riskReward          Float
  stopLoss            Float
  takeProfit          Float
  momentumLabel       String?
  regimeState         String?
  legacyLabel         String?
  signalStrengthScore Float?
}

model Trade {
  id         String    @id @default(uuid())
  symbol     String
  side       String
  entryTime  DateTime
  exitTime   DateTime?
  entryPrice Float
  exitPrice  Float?
  quantity   Float
  pnl        Float?
  commission Float     @default(0)
  status     String    @default("OPEN")
}

model Strategy {
  id          String           @id @default(uuid())
  name        String
  description String
  riskParams  Json
  performance Json
  isActive    Boolean          @default(true)
  backtests   BacktestResult[]
}

model BacktestResult {
  id             String   @id @default(uuid())
  strategyId     String
  startDate      DateTime
  endDate        DateTime
  initialCapital Float
  finalCapital   Float
  performance    Json
  equityCurve    Json
  monthlyReturns Json
  createdAt      DateTime @default(now())
  metrics        Json
  trades         Json
  strategy       Strategy @relation(fields: [strategyId], references: [id])
}

model MarketSentiment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  data      Json
}

model PortfolioSummary {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  data      Json
}
